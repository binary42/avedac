<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.mbari.aved</groupId>
        <artifactId>classifier</artifactId>
        <version>0.4.3-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.mbari.aved.classifier</groupId>
    <artifactId>sharedlibjni</artifactId>
    <packaging>nar</packaging>  
    <version>0.4.3-SNAPSHOT</version>
    <name>AVED classifier JNI library</name>
    <url>http://www.mbari.org</url>
    <profiles>
        <profile>
            <id>Mac32</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <os>
                    <name>MacOSX</name>
                    <arch>i386</arch>
                </os>
            </activation>
            <dependencies>
                <!-- This includes the matlab shared library -->
                <dependency>
                    <groupId>org.mbari.aved.classifier</groupId>
                    <artifactId>sharedlib</artifactId>
                    <version>0.4.3-SNAPSHOT</version>
                    <type>nar</type>
                    <classifier>i386-MacOSX-g++-shared</classifier>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>install</defaultGoal>
                <plugins>
                    <!-- Skip the surefire test goal because we are using the nar one that
                    sets up the java path correctly.-->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.7.1</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <!-- Change the dependency in the created library to use
                        the loader path instead for the shared Matlab library.
                        You need the Xcode developer tools to run this command.
                        TODO: Check for proper Xcode version and existence-->
                                <id>exec-process-classes</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/nar/lib/i386-MacOSX-g++/jni</workingDirectory>
                                    <executable>${project.basedir}/src/main/scripts/execute</executable>
                                    <arguments>
                                        <cmdlineArguments>install_name_tool -change libavedsharedlib.dylib @loader_path/libavedsharedlib.dylib lib${project.artifactId}-${project.version}.jnilib</cmdlineArguments>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                     <!-- Creates the JNI layer for MacOSX environments.
                        This requires properties in the parent pom like
                        ${installPath}, ${mcrRoot}, etc.-->
                    <plugin>
                        <groupId>org.freehep</groupId>
                        <artifactId>freehep-nar-plugin</artifactId>
                        <version>2.0-alpha-11-SNAPSHOT</version>
                        <extensions>true</extensions>
                        <configuration>
                            <libraries>
                                <library>
                                    <type>jni</type>
                                    <narSystemPackage>org.mbari.aved.classifier</narSystemPackage>
                                    <narSystemDirectory>${project.basedir}/target/nar/nar-generated</narSystemDirectory>
                                    <linkCPP>true</linkCPP>
                                </library>
                            </libraries>
                            <cpp>
                                <systemIncludePaths>
                                    <systemIncludePath>${project.parent.basedir}/sharedlib/target/nar/include</systemIncludePath>
                                    <systemIncludePath>${project.basedir}/target/nar/javah-include</systemIncludePath>
                                    <systemIncludePath>${installPath}/lib</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/runtime/maci</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/bin/glnx86</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/os/maci</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/extern/include</systemIncludePath>
                                    <systemIncludePath>/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers</systemIncludePath>
                                </systemIncludePaths>
                            </cpp>
                            <linker>
                                <libs>
                                    <lib>
                                        <directory>${mcrRoot}/runtime/maci</directory>
                                        <name>mwmclmcrrt</name>
                                        <type>shared</type>
                                    </lib>
                                </libs>
                            </linker>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Mac64</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <os>
                    <name>MacOSX</name>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <dependencies>
                <!-- This includes the matlab shared library -->
                <dependency>
                    <groupId>org.mbari.aved.classifier</groupId>
                    <artifactId>sharedlib</artifactId>
                    <version>0.4.3-SNAPSHOT</version>
                    <type>nar</type>
                    <classifier>x86_64-MacOSX-g++-shared</classifier>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>install</defaultGoal>
                <plugins>
                    <!-- Skip the surefire test goal because we are using the nar one that
                    sets up the java path correctly.-->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.7.1</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <!-- Change the dependency in the created library to use
                        the loader path instead for the shared Matlab library.
                        You need the Xcode developer tools to run this command.
                        TODO: Check for proper Xcode version and existence-->
                                <id>exec-process-classes</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>${project.basedir}/target/nar/lib/x86_64-MacOSX-g++/jni</workingDirectory>
                                    <executable>${project.basedir}/src/main/scripts/execute</executable>
                                    <arguments>
                                        <cmdlineArguments>install_name_tool -change libavedsharedlib.dylib @loader_path/libavedsharedlib.dylib lib${project.artifactId}-${project.version}.jnilib</cmdlineArguments>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                     <!-- Creates the JNI layer for MacOSX environments.
                        This requires properties in the parent pom like
                        ${installPath}, ${mcrRoot}, etc.-->
                    <plugin>
                        <groupId>org.freehep</groupId>
                        <artifactId>freehep-nar-plugin</artifactId>
                        <version>2.0-alpha-11-SNAPSHOT</version>
                        <extensions>true</extensions>
                        <configuration>
                            <libraries>
                                <library>
                                    <type>jni</type>
                                    <narSystemPackage>org.mbari.aved.classifier</narSystemPackage>
                                    <narSystemDirectory>${project.basedir}/target/nar/nar-generated</narSystemDirectory>
                                    <linkCPP>true</linkCPP>
                                </library>
                            </libraries>
                            <c>
                                <name>gcc</name>
                                <includes>
                                    <include>**/*.c</include> 
                                </includes>
                            </c>
                            <fortran>
                                 <name>gfortran</name>
                                <includes>
                                    <include>**/*.f</include>
                                    <include>**/*.for</include>
                                </includes>
                            </fortran>
                            <cpp>
                                 <name>g++</name>
                                <includes>
                                    <include>**/*.cc</include>
                                    <include>**/*.cpp</include>
                                    <include>**/*.cxx</include>
                                </includes>
                                <systemIncludePaths>
                                    <systemIncludePath>${project.parent.basedir}/sharedlib/target/nar/include</systemIncludePath>
                                    <systemIncludePath>${project.basedir}/target/nar/javah-include</systemIncludePath>
                                    <systemIncludePath>${installPath}/lib</systemIncludePath>  
                                    <systemIncludePath>${mcrRoot}/runtime/maci64</systemIncludePath> 
                                    <systemIncludePath>${mcrRoot}/sys/os/maci64</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/extern/include</systemIncludePath>
                                    <systemIncludePath>/Developer/SDKs/MacOSX10.5.sdk/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Headers</systemIncludePath>
                                </systemIncludePaths>
                            </cpp>
                            <linker>
                                <name>g++</name>
                                <libs>
                                    <lib>
                                        <directory>${mcrRoot}/runtime/maci64</directory>
                                        <name>mwmclmcrrt</name>
                                        <type>shared</type>
                                    </lib>
                                </libs>
                            </linker>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Linux32</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <os>
                    <name>Linux</name>
                    <arch>i386</arch>
                </os>
            </activation>
            <dependencies>
                <!-- This includes the matlab shared library -->
                <dependency>
                    <groupId>org.mbari.aved.classifier</groupId>
                    <artifactId>sharedlib</artifactId>
                    <version>0.4.3-SNAPSHOT</version>
                    <type>nar</type>
                    <classifier>i386-Linux-g++-shared</classifier>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>install</defaultGoal>
                <plugins>
                        <!-- Creates the JNI layer for Linux environments.
                        This requires properties in the parent pom like
                        ${installPath}, ${mcrRoot}, etc.-->
                    <plugin>
                        <groupId>org.freehep</groupId>
                        <artifactId>freehep-nar-plugin</artifactId>
                        <extensions>true</extensions>
                        <configuration>
                            <libraries>
                                <library>
                                    <type>jni</type>
                                    <narSystemPackage>org.mbari.aved.classifier</narSystemPackage>
                                    <narSystemDirectory>${project.basedir}/target/nar/nar-generated</narSystemDirectory>
                                    <linkCPP>true</linkCPP>
                                </library>
                            </libraries>
                            <cpp>
                                <options>
                                    <option>-pthread</option>
                                    <option>-fPIC</option>
                                </options>
                                <systemIncludePaths>
                                    <systemIncludePath>${project.parent.basedir}/sharedlib/target/nar/include</systemIncludePath>
                                    <systemIncludePath>${project.basedir}/target/nar/javah-include</systemIncludePath>
                                    <systemIncludePath>${installPath}/lib</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/runtime/glnx86</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/os/glnx86</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnx86/jre/lib/i386/native_threads</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnx86/jre/lib/i386/server</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnx86/jre/lib/i386</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/extern/include</systemIncludePath>
                                </systemIncludePaths>
                            </cpp>
                            <linker>
                                <libs>
                                    <lib>
                                        <directory>${mcrRoot}/runtime/glnx86</directory>
                                        <name>mwmclmcrrt</name>
                                        <type>shared</type>
                                    </lib>
                                </libs>
                            </linker>
                        </configuration>
                    </plugin>
                    <!--Skip the surefire test goal because we are using the nar one that
                     sets up the java path correctly.-->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.7.1</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Linux64</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <os>
                    <name>Linux</name>
                    <arch>amd64</arch>
                </os>
            </activation>
            <dependencies>
                <!-- This includes the matlab shared library -->
                <dependency>
                    <groupId>org.mbari.aved.classifier</groupId>
                    <artifactId>sharedlib</artifactId>
                    <version>0.4.3-SNAPSHOT</version>
                    <type>nar</type>
                    <classifier>amd64-Linux-g++-shared</classifier>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>install</defaultGoal>
                <plugins>
                    <!--Skip the surefire test goal because we are using the nar one that
                     sets up the java path correctly.-->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.7.1</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin> 
                        <!-- Creates the JNI layer for Linux environments.
                        This requires properties in the parent pom like
                        ${installPath}, ${mcrRoot}, etc.-->
                    <plugin>
                        <groupId>org.freehep</groupId>
                        <artifactId>freehep-nar-plugin</artifactId>
                        <extensions>true</extensions>
                        <version>2.0-alpha-11-SNAPSHOT</version>
                        <configuration>
                            <libraries>
                                <library>
                                    <type>jni</type>
                                    <narSystemPackage>org.mbari.aved.classifier</narSystemPackage>
                                    <narSystemDirectory>${project.basedir}/target/nar/nar-generated</narSystemDirectory>
                                    <linkCPP>true</linkCPP>
                                </library>
                            </libraries> 
			    <cpp>
                                <name>g++</name>
                                <includes>
                                    <include>**/*.cc</include>
                                    <include>**/*.cpp</include>
                                    <include>**/*.cxx</include>
                                </includes>
                                <options>
                                    <option>-pthread</option>
                                </options>
                                <systemIncludePaths>
                                    <systemIncludePath>${project.parent.basedir}/sharedlib/target/nar/include</systemIncludePath>
                                    <systemIncludePath>${project.basedir}/target/nar/javah-include</systemIncludePath>
                                    <systemIncludePath>${installPath}/lib</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/runtime/glnxa64</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/os/glnxa64</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/native_threads</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64/server</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/sys/java/jre/glnxa64/jre/lib/amd64</systemIncludePath>
                                    <systemIncludePath>${mcrRoot}/extern/include</systemIncludePath>
                                 </systemIncludePaths>
                            </cpp>
                            <linker>  
                                <libs>
                                    <lib>
                                        <directory>${mcrRoot}/runtime/glnxa64</directory>
                                        <name>mwmclmcrrt</name>
                                        <type>shared</type>
                                    </lib>
                                </libs>
                            </linker>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mbari.aved.classifier</groupId>
            <artifactId>sharedlib</artifactId>
            <version>0.4.3-SNAPSHOT</version>
            <type>nar</type>
            <classifier>noarch</classifier>
        </dependency>
        <dependency>
            <groupId>org.mbari.aved.classifier</groupId>
            <artifactId>sharedlib</artifactId>
            <version>0.4.3-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.jdesktop</groupId>
            <artifactId>swing-worker</artifactId>
            <version>1.2</version>
        </dependency>
    </dependencies>
</project>

