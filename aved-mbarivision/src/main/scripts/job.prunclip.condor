##############################################################################
# Condor job file to execute the runclip script
#
# This sets up the appropriate environment variables for executing runclip
# on a Beowulf cluster enabled to run pmbarivision and pvisionTCPmbari.
# 
# The job will create a mpeg clip of the results as well as a XML
# file with the results.
#
# The job notifies the user upon its completion with an email. 
# If this job runs longer than 4 hours it will be automatically 
# terminated.
#
# This work would not have possible without the help of the Condor project
# at the University of Wisconsin, Madison, USA.
# For more information about the Condor software see http://www.cs.wisc.edu/condor/
#
# Copyright (c) MBARI 2010
# Author: D. Cline
#
############################################################################
# Use vanilla universe
##############################################################################
universe = vanilla

##############################################################################
# Define the executable and transfer it 
##############################################################################
executable = $ENV(HOME)/aved/scripts/runclip
should_transfer_files = YES
when_to_transfer_output = ON_EXIT
transfer_input_files = \ 
$ENV(HOME)/aved/scripts/mp2script,\
$ENV(HOME)/aved/scripts/runpvisionworkers,\
$ENV(HOME)/aved/scripts/runpmbarivision,\
$ENV(HOME)/aved/scripts/runmbarivision,\
$ENV(HOME)/aved/scripts/extract_source_metadata.pl,\
$ENV(HOME)/aved/scripts/randomize.pl,\
$ENV(HOME)/aved/scripts/frames2mpeg,\
$ENV(HOME)/aved/scripts/clip2ppm,\
$(input_file),\

##############################################################################
# Set environment variables including scratch directory to execute in and 
# AVED binaries directory. AVED_BIN will be added to PATH statement in the job script. 
# AVED_BIN is not required if the AVED binaries are in default installation paths on the 
# execute machine (e.g. /usr/bin, /usr/local/bin)
##############################################################################
environment = "USER=$ENV(USER) SCRATCH_DIR=/mnt/scratch AVED_BIN=/home/aved/bin HOME=/home/$ENV(USER) MBARIVISION_OPTIONS='$ENV(MBARIVISION_OPTIONS)'" 

#############################################################################
# Never notify the user
#############################################################################
Notification = Always

##############################################################################
# Put a link to the data in the notification email
##############################################################################
+ProcessedResultsURL = "$(processed_results_url)"
+EmailAttributes = "ProcessedResultsURL"

##############################################################################
# This will only run on an AVED-enabled Bewulf cluster
# Arguments to pass to the executable
# -g = create mpeg of results
# -m = use the video mask
# -t = pass the arguments to the transcoder to adjust Gamma (-G 0.8)
# -m = use the alternative inputURL base name
# -a = use the alternative executable runpmbarivision 
# -w = the pvision worker host list file
# -c <startframe - endframe> = only process specified start/end frame range
##############################################################################
arguments = " -u $(input_url) -t ' -G 0.80 ' -g -a runpmbarivision -w $(pvision_worker_file) -i $(input_file)" 

#############################################################################
# Only run on machines enabled to run parallel mbarivision
#############################################################################
requirements = (HAS_PMBARIVISION =?= True) && (HAS_TRANSCODE =?= True) && \
(OpSys == "LINUX")

#############################################################################
# Periodically check your job and then remove it if it has been running more 
# than 4 hours
############################################################################
periodic_remove = (JobStatus == 2) && ((CurrentTime - EnteredCurrentStatus) > 14400)

##############################################################################
# Log files for this job
##############################################################################
log = condor_log/job.aved.log
output = condor_log/job.prunclip.out.$(cluster)
error = condor_log/job.prunclip.err.$(cluster)

queue


